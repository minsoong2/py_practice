Disjoint Sets
    - 공통 원소가 없는 두 집합
    - Disjoint Sets 자료구조
        - 서로소 부분 집합들로 나누어진 원소들의 데이터를 처리하기 위한 자료구조
        - Union (일반적으로 더 작은 node를 부모)
        - Find
    - Union Find 자료구조 라 불림
        과정
        1. Union 연산, 서로 연결된 두 노트 A, B확인
            1-1. A와 B의 루트 노드 A', B' 각각 찾기
            1-2. A'를 B'의 부모 노드로 설정
        2. 모든 Union 연산을 처리할 때까지 1 반복
    - Problem
        - 연산이 편향되게 이루어 지는 경우 (Find 비효율)
        - Worst : O(V)
            ex) 1 <- 2 <- 3 <- 4 <- 5
      - Solution
        - Path Compression

    - Minimum Spanning Tree
        - 그래프에서 모든 노드를 포함(트리의 조건)
        - 사이클이 존재하지 않는(트리의 조건) 부분 그래프
    - Kruskal
        - MST algorithm
        - greedy
        - edge = node - 1
        - O(ElogE)
        과정
        1. 간선 데이터를 비용에 따라 오름차순 - 가장 많은 시간 소요
        2. 간선을 하나씩 확인, 현재 간선이 사이클을 발생시키는지 확인
           2-1. 발생 x: MST에 포함
           2-2. 발생 o: MST에 포함 x
        3. 모든 간선에 대하여 2번 과정을 반복

    - Topology sort
        - Directed acyclic graph
        - 모든 노드를 방향성에 거르지 않게 순서도록 나열
        - Indegree : 특정 노드에 들어오는 간선 개수
        - Outdegree : 특정 노드에 나가는 간선 개수
        - Queue
        과정
        1. Indegree = 0 인 노드를 모두 queue에 넣는다.
        2. queue가 빌 때까지 반복한다.
            2-1. queue에서 원소를 꺼내 해당 노드에서 나가는 간선 제거
            2-2(1). 새롭게 Indegree = 0 인 노드를 모두 queue에 넣는다.

        if 모든 원소 방문하기 전 queue가 빈다면
            cycle 존재